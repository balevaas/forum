{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\Desktop\\\\\\u0432\\u0430\\u0439\\u043D\\u0435\\u0440\\\\info-forum\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport socket from './socket';\nimport reducer from './reducer';\nimport JoinBlock from './components/JoinBlock';\nimport Chat from './components/Chat';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: []\n  });\n\n  const onLogin = async obj => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj\n    });\n    socket.emit('ROOM:JOIN', obj);\n    const {\n      data\n    } = await axios.get(`/rooms/${obj.roomId}`);\n    dispatch({\n      type: 'SET_DATA',\n      payload: data\n    });\n  };\n\n  const setUsers = users => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users\n    });\n  };\n\n  const addMessage = message => {\n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: message\n    });\n  };\n\n  React.useEffect(() => {\n    socket.on('ROOM:SET_USERS', setUsers);\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\n  }, []);\n  window.socket = socket;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, !state.joined ? /*#__PURE__*/React.createElement(JoinBlock, {\n    onLogin: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Chat, Object.assign({}, state, {\n    onAddMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anastasia/Desktop/вайнер/info-forum/src/App.js"],"names":["React","axios","socket","reducer","JoinBlock","Chat","App","state","dispatch","useReducer","joined","roomId","userName","users","messages","onLogin","obj","type","payload","emit","data","get","setUsers","addMessage","message","useEffect","on","window"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,UAAN,CAAiBN,OAAjB,EAA0B;AAClDO,IAAAA,MAAM,EAAE,KAD0C;AAElDC,IAAAA,MAAM,EAAE,IAF0C;AAGlDC,IAAAA,QAAQ,EAAE,IAHwC;AAIlDC,IAAAA,KAAK,EAAE,EAJ2C;AAKlDC,IAAAA,QAAQ,EAAE;AALwC,GAA1B,CAA1B;;AAQA,QAAMC,OAAO,GAAG,MAAOC,GAAP,IAAe;AAC7BR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAd,IAAAA,MAAM,CAACiB,IAAP,CAAY,WAAZ,EAAyBH,GAAzB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAW,UAASL,GAAG,CAACL,MAAO,EAA/B,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GAXD;;AAaA,QAAME,QAAQ,GAAIT,KAAD,IAAW;AAC1BL,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAEL;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9BhB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEM;AAFF,KAAD,CAAR;AAID,GALD;;AAOAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpBvB,IAAAA,MAAM,CAACwB,EAAP,CAAU,gBAAV,EAA4BJ,QAA5B;AACApB,IAAAA,MAAM,CAACwB,EAAP,CAAU,kBAAV,EAA8BH,UAA9B;AACD,GAHD,EAGG,EAHH;AAKAI,EAAAA,MAAM,CAACzB,MAAP,GAAgBA,MAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACK,KAAK,CAACG,MAAP,gBACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,IAAD,oBAAUR,KAAV;AAAiB,IAAA,YAAY,EAAEgB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADF;AASD;;AAED,eAAejB,GAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport socket from './socket';\r\n\r\nimport reducer from './reducer';\r\nimport JoinBlock from './components/JoinBlock';\r\nimport Chat from './components/Chat';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    joined: false,\r\n    roomId: null,\r\n    userName: null,\r\n    users: [],\r\n    messages: [],\r\n  });\r\n\r\n  const onLogin = async (obj) => {\r\n    dispatch({\r\n      type: 'JOINED',\r\n      payload: obj,\r\n    });\r\n    socket.emit('ROOM:JOIN', obj);\r\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const setUsers = (users) => {\r\n    dispatch({\r\n      type: 'SET_USERS',\r\n      payload: users,\r\n    });\r\n  };\r\n\r\n  const addMessage = (message) => {\r\n    dispatch({\r\n      type: 'NEW_MESSAGE',\r\n      payload: message,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    socket.on('ROOM:SET_USERS', setUsers);\r\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\r\n  }, []);\r\n\r\n  window.socket = socket;\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {!state.joined ? (\r\n        <JoinBlock onLogin={onLogin} />\r\n      ) : (\r\n        <Chat {...state} onAddMessage={addMessage} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}